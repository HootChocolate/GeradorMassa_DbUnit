package seuBarrigaPontoCom_estrategia5;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import java.sql.Connection;
import java.sql.SQLException;

import org.junit.BeforeClass;
import org.junit.Test;

import br.ce.wcaquino.dao.utils.ConnectionFactory;
import br.ce.wcaquino.entidades.Usuario;
import br.ce.wcaquino.service.UsuarioService;

public class TestService_Usuario {
	
	private UsuarioService usuarioService = new UsuarioService();
	
	@BeforeClass
	public static void beforeClass() throws ClassNotFoundException, SQLException {
		Connection JDBC = ConnectionFactory.getConnection();
		
		JDBC.prepareStatement(
				"DELETE FROM contas").execute();
		JDBC.prepareStatement(
				"DELETE FROM usuarios").execute();
		JDBC.prepareStatement(
				"INSERT INTO usuarios"
				+ "(id, nome, email, senha, conta_principal_id) "
				+ "VALUES (1, 'Usuario de teste', 'teste@gmail.com', '123', 1)").execute();
		
		ConnectionFactory.closeConnection();
	}
	
	@Test
	public void testInserirUsuario() throws Exception {
		
		String nomeInserido = "Teste de inserção";
		
		Connection JDBC = ConnectionFactory.getConnection();
		
		JDBC.prepareStatement(
				"INSERT INTO usuarios"
				+ "(id, nome, email, senha, conta_principal_id) "
				+ "VALUES (2, '" + nomeInserido + "', 'insercao@gmail.com', '123', 2)").execute();
		
		ConnectionFactory.closeConnection();
		
		Usuario usuario = usuarioService.findByNome("Teste de inserção");
		
		assertEquals("[ERRO]Houve erro ao tentar inserir um usuario no banco", nomeInserido, usuario.getNome());
	}
	
	@Test
	public void testConsultarUsuario() throws Exception {
		Usuario usuario = usuarioService.findByNome("Usuario de teste");
		assertNotNull("[ERRO]Houve erro ao tentar consultar um usuario no banco", usuario);
	}
	
	@Test
	public void testAlterarUsuario() throws Exception {
		Connection JDBC = ConnectionFactory.getConnection();
		
		JDBC.prepareStatement(
				"INSERT INTO usuarios"
						+ "(id, nome, email, senha, conta_principal_id) "
						+ "VALUES (2, 'Alterar usuario', 'insercao@gmail.com', '123', 2)").execute();
		
		ConnectionFactory.closeConnection();
		
		Usuario usuario = usuarioService.findByNome("Alterar usuario");
		
		usuario.setNome("Alterar usuario - Alterado!");
		
		usuarioService.salvar(usuario);
		
		Usuario usuarioAlterado = usuarioService.findByNome("Alterar usuario - Alterado!");
	}
}
